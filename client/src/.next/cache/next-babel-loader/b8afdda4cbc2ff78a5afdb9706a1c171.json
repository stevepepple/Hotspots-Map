{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport _ from 'lodash';\nimport helpers from '../helpers.js';\nimport initialGuides from './guides.json';\nexport function uiReducer(state = uiState, action) {\n  switch (action.type) {}\n}\nconst editorState = {\n  features: [],\n  numFeatures: 0\n};\nexport const editorReducer = (state = editorState, action) => {\n  switch (action.type) {\n    case 'ADD_FEATURE':\n      {\n        return Object.assign({}, state, {\n          features: state.features.concat(action.feature),\n          numFeatures: state.numFeatures++\n        });\n      }\n\n    default:\n      return state;\n  }\n}; // reducer takes state and action (in our a javascript object) as parameters\n// then returns a state\n\nexport const uiState = (state = {}, action) => {\n  if (action.type === 'SET_UI_STATE') {\n    //console.log(\"Setting initial Redux state with: \", action)\n    state = action.state;\n  }\n\n  return state;\n};\nexport const detailsShown = (state = false, action) => {\n  if (action.type === 'SET_DETAILS_SHOWN') {\n    state = action.show;\n  }\n\n  return state;\n};\nexport const showList = (state = true, action) => {\n  if (action.type === 'SET_SHOW_LIST') {\n    state = action.show;\n  }\n\n  return state;\n};\nexport const mapReady = (state = false, action) => {\n  if (action.type === 'SET_MAP_READY') {\n    state = action.ready;\n  }\n\n  return state;\n};\nexport const boundsReady = (state = false, action) => {\n  if (action.type === 'SET_BOUNDS_READY') {\n    state = action.ready;\n  }\n\n  return state;\n};\nexport const detailsId = (state = null, action) => {\n  if (action.type === 'SET_DETAILS_ID') {\n    state = action.id;\n  }\n\n  return state;\n};\nexport const detailsType = (state = \"place\", action) => {\n  if (action.type === 'SET_DETAILS_TYPE') {\n    console.log(\"SET_DETAILS_TYPE: \", action.place_type);\n    state = action.place_type;\n  }\n\n  return state;\n};\nexport const activity = (state = \"\", action) => {\n  if (action.type === 'SET_ACTIVITY') {\n    if (action.activity === \"any\") {\n      action.activity = null;\n    }\n\n    console.log(\"SEt activity: \", action.activity);\n    state = action.activity;\n  }\n\n  return state;\n}; // reducer takes state and action (in our a javascript object) as parameters\n// then returns a state\n\nexport const currentLocation = (state = {\n  latitude: 0,\n  longitude: 0,\n  name: null,\n  distance_changed: 0\n}, action) => {\n  if (action.type === 'SET_CURRENT_LOCATION') {\n    //console.log(\"SET_CURRENT_LOCATION\", action.location.latitude, action.location.longitude, action.distance_changed)\n    action.location.latitude = parseFloat(action.location.latitude);\n    action.location.longitude = parseFloat(action.location.longitude);\n    state = action.location;\n  }\n\n  return state;\n};\nexport const viewport = (state = {}, action) => {\n  if (action.type === 'SET_VIEWPORT') {\n    state = action.viewport;\n  }\n\n  return state;\n};\nexport const windowSize = (state = {\n  width: 1024,\n  height: 768\n}, action) => {\n  if (action.type === 'SET_WINDOW_SIZE') {\n    //console.log(\"Set windows size: \", action.size)\n    state = action.size;\n  }\n\n  return state;\n};\nexport const mapSize = (state = {\n  width: 800,\n  height: 600\n}, action) => {\n  if (action.type === 'SET_MAP_SIZE') {\n    console.log(\"Set map size: \", action.size);\n    state = action.size;\n  }\n\n  return state;\n};\nexport const layers = (state = {\n  clusters: false,\n  heatmap: true,\n  neighborhoods: true,\n  places_markers: true,\n  photo_markers: true\n}, action) => {\n  if (action.type === 'SET_LAYERS') {\n    state = action.layers;\n  }\n\n  return state;\n};\nexport const layersChanged = (state = false, action) => {\n  if (action.type === 'SET_LAYERS_CHANGED') {\n    // Always change he state to the opposite.\n    state = !state;\n  }\n\n  return state;\n};\nexport const headerSize = (state = {\n  width: 0,\n  height: 0\n}, action) => {\n  if (action.type === 'SET_HEADER_SIZE') {\n    state = action.size;\n  }\n\n  return state;\n};\nexport const bounds = (state = [], action) => {\n  if (action.type === 'SET_BOUNDS') {\n    state = action.bounds;\n  }\n\n  return state;\n};\nexport const pixelDistance = (state = [], action) => {\n  if (action.type === 'SET_PIXEL_DISTANCE') {\n    state = action.distance;\n  }\n\n  return state;\n};\nexport const densityBonus = (state = 0.2, action) => {\n  if (action.type === 'SET_DENSITY_BONUS') {\n    state = action.bonus;\n  }\n\n  return state;\n};\nexport const bearing = (state = 0, action) => {\n  if (action.type === 'SET_BEARING') {\n    console.log(\"SET BEARING: \", action.bearing);\n    state = action.bearing;\n  }\n\n  return state;\n};\nexport const zoom = (state = 14, action) => {\n  if (action.type === 'SET_ZOOM') {\n    state = action.zoom;\n  }\n\n  return state;\n}; // TODO: create a mathematical relationship between zoom and distance\n\nexport const distance = (state = 1.4, action) => {\n  if (action.type === 'SET_DISTANCE') {\n    console.log('SET_DISTANCE: ', action.distance);\n    state = action.distance;\n  }\n\n  return state;\n}; // Default state is one day\n\nexport const currentDays = (state = \"1\", action) => {\n  if (action.type === 'SET_DAYS') {\n    //console.log('Setting Days ', action)\n    state = action.days;\n  }\n\n  return state;\n}; // Default state is one day\n\nexport const searchTerm = (state = \"\", action) => {\n  if (action.type === 'SET_SEARCH_TERM') {\n    state = action.term;\n  }\n\n  return state;\n};\nexport const currentVibes = (state = [], action) => {\n  if (action.type === 'SET_CURRENT_VIBES') {\n    state = action.vibes;\n  }\n\n  return state;\n}; // One of events, places, or guides\n\nexport const placeType = (state = 'places', action) => {\n  if (action.type === 'SET_PLACE_TYPE') {\n    //console.log(\"SET_PLACE_TYPE\", action)\n    state = action.value;\n  }\n\n  return state;\n};\nexport const topVibes = (state = [], action) => {\n  if (action.type === 'SET_TOP_VIBES') {\n    state = action.top_vibes;\n  }\n\n  return state;\n};\nexport const signatureVibes = (state = [], action) => {\n  if (action.type === 'SET_SIGNATURE_VIBES') {\n    state = action.signatureVibes;\n  }\n\n  return state;\n};\nexport const mainVibe = (state = null, action) => {\n  if (action.type === 'SET_MAIN_VIBE') {\n    state = action.vibe;\n  }\n\n  return state;\n};\nexport const allVibes = (state = [], action) => {\n  if (action.type === 'SET_ALL_VIBES') {\n    state = action.allVibes;\n  }\n\n  return state;\n};\nexport const allCategories = (state = [], action) => {\n  if (action.type === 'SET_ALL_CATEGORIES') {\n    state = action.allCategories;\n  }\n\n  return state;\n};\n/* TODO: Read from API or YAML\r\nexport const vibeCategories = (\r\nvibe_categories: ['adventurous', 'artsy', 'authentic', 'civic', 'chill', 'cozy', 'creative', 'energetic', 'exclusive', 'festive', 'free', 'friendly', 'healthy', 'local', 'romantic', 'interactive', 'inspired', 'vibrant', 'lively', 'outdoors', 'scenic', 'positive', 'unique']\r\n) */\n\nexport const nearby_places = (state = [], action) => {\n  if (action.type === 'SET_NEARBY_PLACES') {\n    let places = action.places;\n    /*\r\n    let places = GeoJSON.parse(action.places, { Point: ['latitude', 'longitude'] });\r\n    console.log('Nearby Places to GEOJSON :', places)\r\n      places.features.forEach(venue => {\r\n          request.post('http://localhost:5000/api/places', {form: venue}, \r\n            function(err,httpResponse,body){ \r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    //console.log('Saved venue: ', body)\r\n                }\r\n        })\r\n        \r\n    });\r\n    */\n\n    state = places;\n  }\n\n  return state;\n};\nexport const cities = (state = [], action) => {\n  if (action.type === 'SET_CITIES') {\n    // Save the processed data to state.\n    return action.cities;\n  }\n\n  return state;\n};\nexport const neighborhoods = (state = [], action) => {\n  if (action.type === 'SET_NEIGHBORHOODS') {\n    // Save the processed data to state.\n    return action.neighborhoods;\n  }\n\n  return state;\n};\nexport const eventsData = (state = [], action) => {\n  if (action.type === 'SET_EVENTS_DATA') {\n    // TODO: Map and process, but plan to move this logic to API\n    let processed = action.events_data.map(event => {\n      event.properties.score = event.properties.likes;\n      return event;\n    }); // Save the processed data to state.\n\n    state = processed;\n  }\n\n  return state;\n};\nexport const guidesData = (state = initialGuides['results']['features'], action) => {\n  if (action.type === 'SET_GUIDES_DATA') {\n    return action.guides_data;\n  }\n\n  return state;\n};\nexport const guideDetails = (state = {}, action) => {\n  if (action.type === 'SET_GUIDE_DETAILS') {\n    return action.details;\n  }\n\n  return state;\n};\nexport const guideMarkers = (state = [], action) => {\n  if (action.type === 'SET_GUIDE_MARKERS') {\n    return action.markers;\n  }\n\n  return state;\n};\nexport const placesData = (state = [], action) => {\n  if (action.type === 'SET_PLACES_DATA') {\n    // TODO: Map and process, but plan to moe this logic to API\n    let processed = action.places_data.map(place => {\n      // TODO: Score places with more categories higher\n      //console.log(\"categories: \", place.properties.categories)\n      // TODO: work with Cory to fix \n      //console.log(place.properties.categories)\n      //if (place.properties.categories.length > 1) \n      //place.properties.sub_categories = place.properties.categories\n      let matches = helpers.getCategoryMatch(place.properties.categories);\n      if (matches.length === 0) matches.push('missing');\n      place.properties.categories = matches[0]; //event.properties.score = event.properties.likes\n\n      return place;\n    }); // If request is for fresh results update the map.\n    // Otehrwise, merge the results\n\n    if (action.refreshResults) {\n      state = processed;\n    } else {\n      var merged = _.unionBy(state, processed, 'id');\n\n      state = merged;\n    } //console.log(\"How many total places: \", state.length)\n\n  }\n\n  return state;\n};\nexport const currentItem = (state = {\n  name: null,\n  description: null,\n  address: null,\n  categories: [],\n  hours: null,\n  instagram: null,\n  phone: null,\n  location: null,\n  reason: null,\n  tips: [],\n  vibes: [],\n  images: []\n}, action) => {\n  if (action.type === \"SET_CURRENT_ITEM\") {\n    console.log('SET_CURRENT_VIBES: ', action.place);\n    return action.place;\n  }\n\n  return state;\n};\nexport const currentPage = (state = 0, action) => {\n  if (action.type === 'SET_CURRENT_PAGE') {\n    state = action.page;\n  }\n\n  return state;\n};\nexport const totalPages = (state = 5, action) => {\n  if (action.type === 'SET_TOTAL_PAGES') {\n    state = action.pages;\n  }\n\n  return state;\n};\nexport const topPicks = (state = [], action) => {\n  if (action.type === 'SET_TOP_PICKS_DATA') {\n    // Save the processed data to state.\n    // If request is for fresh results update the map.\n    // TODO: Map and process, but plan to moe this logic to API\n    let processed = action.places_data.map(place => {\n      // TODO: work with Cory to fix these categories according to the schema\n      place.properties.sub_categories = place.properties.categories;\n      place.properties.top_vibe = null; // Give every point a cluster attribute. \n\n      place.properties.cluster = null;\n\n      if (place.properties.vibes.length > 0) {\n        place.properties.top_vibe = place.properties.vibes[0];\n      }\n\n      if (place.properties.sub_categories && typeof place.properties.sub_categories == 'object' && place.properties.sub_categories.length > 0) {\n        place.properties.categories = place.properties.sub_categories[0];\n      }\n\n      return place;\n    });\n\n    if (action.refreshResults === false || action.mergeTopPicks === true) {\n      var merged = _.unionBy(state, processed, 'id');\n\n      let merged_sorted = merged.sort((a, b) => b.properties.average_score - a.properties.average_score);\n      state = merged_sorted;\n    } else {\n      state = processed;\n    }\n  }\n\n  return state;\n}; // TODO: Remove; This is just a test\n\nexport const name = (state = 'Steve', action) => {\n  switch (action.type) {\n    case 'SET_NAME':\n      return action.name;\n\n    case 'REMOVE_NAME':\n      return null;\n\n    default:\n      return state;\n  }\n};\nexport const geod = (state = {}, action) => {\n  switch (action.type) {\n    case 'ACTIVATE_GEOD':\n      return action.geod;\n\n    case 'CLOSE_GEOD':\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport const reducers = history => combineReducers({\n  activity,\n  allCategories,\n  allVibes,\n  bearing,\n  bounds,\n  boundsReady,\n  cities,\n  editorReducer,\n  geod,\n  router: connectRouter(history),\n  currentLocation,\n  currentItem,\n  currentDays,\n  currentPage,\n  currentVibes,\n  densityBonus,\n  detailsId,\n  detailsType,\n  detailsShown,\n  distance,\n  eventsData,\n  guidesData,\n  guideDetails,\n  guideMarkers,\n  headerSize,\n  layers,\n  layersChanged,\n  mapReady,\n  mapSize,\n  name,\n  nearby_places,\n  pixelDistance,\n  placesData,\n  placeType,\n  searchTerm,\n  showList,\n  totalPages,\n  topPicks,\n  topVibes,\n  mainVibe,\n  signatureVibes,\n  uiState,\n  viewport,\n  windowSize,\n  zoom\n});","map":{"version":3,"sources":["C:/Users/12604/Dropbox (Personal)/Projects/Hotspot App/App/client/src/redux/reducer.js"],"names":["combineReducers","connectRouter","_","helpers","initialGuides","uiReducer","state","uiState","action","type","editorState","features","numFeatures","editorReducer","Object","assign","concat","feature","detailsShown","show","showList","mapReady","ready","boundsReady","detailsId","id","detailsType","console","log","place_type","activity","currentLocation","latitude","longitude","name","distance_changed","location","parseFloat","viewport","windowSize","width","height","size","mapSize","layers","clusters","heatmap","neighborhoods","places_markers","photo_markers","layersChanged","headerSize","bounds","pixelDistance","distance","densityBonus","bonus","bearing","zoom","currentDays","days","searchTerm","term","currentVibes","vibes","placeType","value","topVibes","top_vibes","signatureVibes","mainVibe","vibe","allVibes","allCategories","nearby_places","places","cities","eventsData","processed","events_data","map","event","properties","score","likes","guidesData","guides_data","guideDetails","details","guideMarkers","markers","placesData","places_data","place","matches","getCategoryMatch","categories","length","push","refreshResults","merged","unionBy","currentItem","description","address","hours","instagram","phone","reason","tips","images","currentPage","page","totalPages","pages","topPicks","sub_categories","top_vibe","cluster","mergeTopPicks","merged_sorted","sort","a","b","average_score","geod","reducers","history","router"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport _ from 'lodash'\r\nimport helpers from '../helpers.js'\r\n\r\nimport initialGuides from './guides.json'\r\n\r\nexport function uiReducer(state = uiState, action) {\r\n  switch(action.type) {\r\n    \r\n  }\r\n}\r\n\r\nconst editorState = { features: [], numFeatures: 0 }\r\n\r\nexport const editorReducer = (state = editorState, action) => {\r\n  switch(action.type) {\r\n    case 'ADD_FEATURE': {\r\n      return Object.assign({}, state, {\r\n        features: state.features.concat(action.feature),\r\n        numFeatures: state.numFeatures++\r\n      })\r\n    }\r\n    default: \r\n      return state\r\n  }\r\n}\r\n\r\n// reducer takes state and action (in our a javascript object) as parameters\r\n// then returns a state\r\nexport const uiState = (state = {}, action) => {\r\n  if (action.type === 'SET_UI_STATE') {\r\n    //console.log(\"Setting initial Redux state with: \", action)\r\n    state = action.state\r\n  }\r\n  return state\r\n}\r\n\r\nexport const detailsShown = (state = false, action) => {\r\n  if (action.type === 'SET_DETAILS_SHOWN') {\r\n    state = action.show\r\n  }\r\n  return state\r\n}\r\n\r\nexport const showList = (state = true, action) => {\r\n  if (action.type === 'SET_SHOW_LIST') {\r\n    state = action.show\r\n  }\r\n  return state\r\n}\r\n\r\nexport const mapReady = (state = false, action) => {\r\n  if (action.type === 'SET_MAP_READY') {\r\n    state = action.ready\r\n  }\r\n  return state\r\n}\r\n\r\nexport const boundsReady = (state = false, action) => {\r\n  if (action.type === 'SET_BOUNDS_READY') {\r\n    state = action.ready\r\n  }\r\n  return state\r\n}\r\n\r\nexport const detailsId = (state = null, action) => {\r\n  if (action.type === 'SET_DETAILS_ID') {\r\n    state = action.id\r\n  }\r\n  return state\r\n}\r\n\r\nexport const detailsType = (state = \"place\", action) => {\r\n  if (action.type === 'SET_DETAILS_TYPE') {\r\n    console.log(\"SET_DETAILS_TYPE: \", action.place_type)\r\n    state = action.place_type\r\n  }\r\n  return state\r\n}\r\n\r\nexport const activity = (state = \"\", action) => {\r\n  if (action.type === 'SET_ACTIVITY') {\r\n    if (action.activity === \"any\"){\r\n      action.activity = null\r\n    }\r\n    console.log(\"SEt activity: \", action.activity)\r\n    state = action.activity\r\n  }\r\n  return state\r\n}\r\n\r\n// reducer takes state and action (in our a javascript object) as parameters\r\n// then returns a state\r\nexport const currentLocation = (state = { latitude: 0, longitude: 0, name : null, distance_changed : 0 }, action) => {\r\n  if (action.type === 'SET_CURRENT_LOCATION') {\r\n    //console.log(\"SET_CURRENT_LOCATION\", action.location.latitude, action.location.longitude, action.distance_changed)\r\n    action.location.latitude = parseFloat(action.location.latitude)\r\n    action.location.longitude = parseFloat(action.location.longitude)\r\n    state = action.location\r\n  }\r\n  return state\r\n}\r\n\r\nexport const viewport = (state = {}, action) => {\r\n  if (action.type === 'SET_VIEWPORT') {\r\n    \r\n    state = action.viewport\r\n  }\r\n  return state\r\n}\r\n\r\nexport const windowSize = (state = { width: 1024, height: 768 }, action) => {\r\n  if (action.type === 'SET_WINDOW_SIZE') {\r\n    //console.log(\"Set windows size: \", action.size)\r\n    state = action.size\r\n  }\r\n  return state\r\n}\r\n\r\nexport const mapSize = (state = { width: 800, height: 600 }, action) => {\r\n  if (action.type === 'SET_MAP_SIZE') {\r\n    console.log(\"Set map size: \", action.size)\r\n    state = action.size\r\n  }\r\n  return state\r\n}\r\n\r\nexport const layers = (state = { clusters: false, heatmap: true, neighborhoods: true, places_markers: true, photo_markers: true }, action) => {\r\n  if (action.type === 'SET_LAYERS') {    \r\n    state = action.layers\r\n  }\r\n  return state\r\n}\r\n\r\nexport const layersChanged = (state = false, action) => {\r\n  if (action.type === 'SET_LAYERS_CHANGED') {\r\n    // Always change he state to the opposite.\r\n\r\n    state = !state\r\n  }\r\n  return state\r\n}\r\n\r\nexport const headerSize = (state = { width: 0, height: 0 }, action) => {\r\n  if (action.type === 'SET_HEADER_SIZE') {\r\n    state = action.size\r\n  }\r\n  return state\r\n}\r\n\r\nexport const bounds = (state = [], action) => {\r\n  if (action.type === 'SET_BOUNDS') {    \r\n    state = action.bounds    \r\n  }\r\n  return state\r\n}\r\n\r\nexport const pixelDistance = (state = [], action) => {\r\n  if (action.type === 'SET_PIXEL_DISTANCE') {\r\n    state = action.distance\r\n  }\r\n  return state\r\n}\r\n\r\nexport const densityBonus = (state = 0.2, action) => {\r\n  if (action.type === 'SET_DENSITY_BONUS') {\r\n    state = action.bonus\r\n  }\r\n  return state\r\n}\r\n\r\nexport const bearing = (state = 0, action) => {\r\n  if (action.type === 'SET_BEARING') {\r\n    console.log(\"SET BEARING: \", action.bearing)\r\n    state = action.bearing\r\n  }\r\n  return state\r\n}\r\n\r\nexport const zoom = (state = 14, action) => {\r\n  if (action.type === 'SET_ZOOM') {\r\n    state = action.zoom\r\n  }\r\n  return state\r\n}\r\n\r\n// TODO: create a mathematical relationship between zoom and distance\r\nexport const distance = (state = 1.4, action) => {\r\n  if (action.type === 'SET_DISTANCE') {\r\n    console.log('SET_DISTANCE: ', action.distance)\r\n    state = action.distance\r\n  }\r\n  return state\r\n}\r\n\r\n// Default state is one day\r\nexport const currentDays = (state = \"1\", action) => {\r\n  if (action.type === 'SET_DAYS') {\r\n    //console.log('Setting Days ', action)\r\n    state = action.days\r\n  }\r\n  return state\r\n}\r\n\r\n// Default state is one day\r\nexport const searchTerm = (state = \"\", action) => {\r\n  if (action.type === 'SET_SEARCH_TERM') {\r\n    state = action.term\r\n  }\r\n  return state\r\n}\r\n\r\nexport const currentVibes = (state = [], action) => {\r\n  if (action.type === 'SET_CURRENT_VIBES') {\r\n    state = action.vibes\r\n  }\r\n  return state\r\n}\r\n\r\n// One of events, places, or guides\r\nexport const placeType = (state = 'places', action) => {\r\n  if (action.type === 'SET_PLACE_TYPE') {\r\n    //console.log(\"SET_PLACE_TYPE\", action)\r\n    state = action.value\r\n  }\r\n  return state\r\n}\r\n\r\n\r\nexport const topVibes = (state = [], action) => {\r\n  if (action.type === 'SET_TOP_VIBES') {\r\n    state = action.top_vibes\r\n  }\r\n  return state\r\n}\r\n\r\nexport const signatureVibes = (state = [], action) => {\r\n  if (action.type === 'SET_SIGNATURE_VIBES') {\r\n    state = action.signatureVibes\r\n  }\r\n  return state\r\n}\r\n\r\nexport const mainVibe = (state = null, action) => {\r\n  if (action.type === 'SET_MAIN_VIBE') {\r\n    state = action.vibe\r\n  }\r\n  return state\r\n}\r\n\r\nexport const allVibes = (state = [], action) => {\r\n  if (action.type === 'SET_ALL_VIBES') {\r\n    state = action.allVibes\r\n  }\r\n  return state\r\n}\r\n\r\nexport const allCategories = (state = [], action) => {\r\n  if (action.type === 'SET_ALL_CATEGORIES') {\r\n    state = action.allCategories\r\n  }\r\n  return state\r\n}\r\n\r\n/* TODO: Read from API or YAML\r\nexport const vibeCategories = (\r\nvibe_categories: ['adventurous', 'artsy', 'authentic', 'civic', 'chill', 'cozy', 'creative', 'energetic', 'exclusive', 'festive', 'free', 'friendly', 'healthy', 'local', 'romantic', 'interactive', 'inspired', 'vibrant', 'lively', 'outdoors', 'scenic', 'positive', 'unique']\r\n) */\r\n\r\n\r\nexport const nearby_places = (state = [], action) => {\r\n  if (action.type === 'SET_NEARBY_PLACES') {\r\n\r\n    let places = action.places\r\n    /*\r\n    let places = GeoJSON.parse(action.places, { Point: ['latitude', 'longitude'] });\r\n    console.log('Nearby Places to GEOJSON :', places)\r\n\r\n    places.features.forEach(venue => {\r\n\r\n        request.post('http://localhost:5000/api/places', {form: venue}, \r\n            function(err,httpResponse,body){ \r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    //console.log('Saved venue: ', body)\r\n                }\r\n        })\r\n        \r\n    });\r\n    */\r\n\r\n    state = places\r\n  }\r\n  return state\r\n}\r\n\r\nexport const cities = (state = [], action) => {\r\n\r\n  if (action.type === 'SET_CITIES') {\r\n    // Save the processed data to state.\r\n    \r\n    return action.cities\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const neighborhoods = (state = [], action) => {\r\n\r\n  if (action.type === 'SET_NEIGHBORHOODS') {\r\n    // Save the processed data to state.\r\n    return action.neighborhoods\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const eventsData = (state = [], action) => {\r\n\r\n  if (action.type === 'SET_EVENTS_DATA') {\r\n    // TODO: Map and process, but plan to move this logic to API\r\n    let processed = action.events_data.map(event => {\r\n      event.properties.score = event.properties.likes\r\n      return event\r\n    })\r\n\r\n    // Save the processed data to state.\r\n    state = processed    \r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const guidesData = (state = initialGuides['results']['features'], action) => {\r\n  if (action.type === 'SET_GUIDES_DATA') {\r\n    return action.guides_data\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const guideDetails = (state = {}, action) => {\r\n  if (action.type === 'SET_GUIDE_DETAILS') {\r\n    return action.details\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const guideMarkers = (state = [], action) => {\r\n  if (action.type === 'SET_GUIDE_MARKERS') {\r\n    return action.markers\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const placesData = (state = [], action) => {\r\n\r\n  if (action.type === 'SET_PLACES_DATA') {\r\n    // TODO: Map and process, but plan to moe this logic to API\r\n    let processed = action.places_data.map(place => {\r\n      // TODO: Score places with more categories higher\r\n      //console.log(\"categories: \", place.properties.categories)\r\n      // TODO: work with Cory to fix \r\n      //console.log(place.properties.categories)\r\n      //if (place.properties.categories.length > 1) \r\n      \r\n      //place.properties.sub_categories = place.properties.categories\r\n\r\n      let matches = helpers.getCategoryMatch(place.properties.categories)\r\n      \r\n      if (matches.length === 0) matches.push('missing')\r\n\r\n      place.properties.categories = matches[0]\r\n      //event.properties.score = event.properties.likes\r\n      return place\r\n    })\r\n    \r\n    // If request is for fresh results update the map.\r\n    // Otehrwise, merge the results\r\n    if(action.refreshResults) {\r\n      state = processed\r\n    } else {\r\n      var merged = _.unionBy(state, processed, 'id')\r\n      state = merged\r\n    }\r\n    \r\n    //console.log(\"How many total places: \", state.length)\r\n    \r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const currentItem = (state = {\r\n  name: null,\r\n  description: null,\r\n  address: null,\r\n  categories: [],\r\n  hours: null,\r\n  instagram: null,\r\n  phone: null,\r\n  location: null,\r\n  reason: null,\r\n  tips: [],\r\n  vibes: [],\r\n  images: []\r\n}, action) => {\r\n  if (action.type === \"SET_CURRENT_ITEM\") {\r\n    console.log('SET_CURRENT_VIBES: ', action.place)\r\n    return action.place\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const currentPage = (state = 0, action) => {\r\n  if (action.type === 'SET_CURRENT_PAGE') {\r\n    state = action.page\r\n  }\r\n  return state\r\n}\r\n\r\nexport const totalPages = (state = 5, action) => {\r\n  if (action.type === 'SET_TOTAL_PAGES') {\r\n    state = action.pages\r\n  }\r\n  return state\r\n}\r\n\r\nexport const topPicks = (state = [], action) => {\r\n\r\n  if (action.type === 'SET_TOP_PICKS_DATA') {\r\n    // Save the processed data to state.\r\n    // If request is for fresh results update the map.\r\n    // TODO: Map and process, but plan to moe this logic to API\r\n    let processed = action.places_data.map(place => {\r\n      // TODO: work with Cory to fix these categories according to the schema\r\n      place.properties.sub_categories = place.properties.categories\r\n      place.properties.top_vibe = null\r\n\r\n      // Give every point a cluster attribute. \r\n      place.properties.cluster = null\r\n      if (place.properties.vibes.length > 0) {\r\n        place.properties.top_vibe = place.properties.vibes[0]\r\n      }\r\n\r\n      if (place.properties.sub_categories && typeof (place.properties.sub_categories) == 'object' && place.properties.sub_categories.length > 0) {\r\n        place.properties.categories = place.properties.sub_categories[0]\r\n      }\r\n\r\n      return place\r\n    })\r\n\r\n    if (action.refreshResults === false || action.mergeTopPicks === true) {\r\n      var merged = _.unionBy(state, processed, 'id')\r\n      let merged_sorted = merged.sort((a, b) => b.properties.average_score - a.properties.average_score)\r\n      state = merged_sorted\r\n\r\n    } else {\r\n      state = processed\r\n\r\n    }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\n// TODO: Remove; This is just a test\r\nexport const name = (state = 'Steve', action) => {\r\n  \r\n  switch (action.type) {\r\n    case 'SET_NAME':\r\n      return action.name;\r\n    case 'REMOVE_NAME':\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const geod = (state = {}, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'ACTIVATE_GEOD':\r\n      return action.geod;\r\n    case 'CLOSE_GEOD':\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const reducers = (history) => combineReducers({\r\n  activity,\r\n  allCategories,\r\n  allVibes,\r\n  bearing,\r\n  bounds,\r\n  boundsReady,\r\n  cities,\r\n  editorReducer,\r\n  geod,\r\n  router: connectRouter(history),\r\n  currentLocation,\r\n  currentItem,\r\n  currentDays,\r\n  currentPage,\r\n  currentVibes,\r\n  densityBonus,\r\n  detailsId,\r\n  detailsType,\r\n  detailsShown,\r\n  distance,\r\n  eventsData,\r\n  guidesData,\r\n  guideDetails,\r\n  guideMarkers,\r\n  headerSize,\r\n  layers,\r\n  layersChanged,\r\n  mapReady,\r\n  mapSize,\r\n  name,\r\n  nearby_places,\r\n  pixelDistance,\r\n  placesData,\r\n  placeType,\r\n  searchTerm,\r\n  showList,\r\n  totalPages,\r\n  topPicks,\r\n  topVibes,\r\n  mainVibe,\r\n  signatureVibes,\r\n  uiState,\r\n  viewport,\r\n  windowSize,\r\n  zoom\r\n})"]},"metadata":{},"sourceType":"module"}